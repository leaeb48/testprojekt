name: Java CI Pipeline

on:
  push:
    branches: [ '**' ]  # Prüft jeden Branch bei jedem Push
  pull_request:
    branches: [ main ]  # Prüft PRs, die in main gemerged werden sollen

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean verify

      - name: Run unit tests
        run: mvn test

  generate-docs:
    name: Generate Documentation
    runs-on: ubuntu-latest
    needs: build   # Nur wenn der Build erfolgreich war
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/pull/')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Generate Javadoc
        run: mvn javadoc:javadoc

      - name: Upload documentation artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-documentation
          path: target/site/apidocs

  changelog:
    name: Update Changelog
    runs-on: ubuntu-latest
    needs: [ build ]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          configuration: ".github/changelog-config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
